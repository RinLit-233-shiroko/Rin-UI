name: Build & Release RinUI Gallery

on:
  push:
    tags:
      - "*"
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag (e.g. v1.2.3)"
        required: false

permissions:
  contents: write

concurrency:
  group: build-${{ github.ref_name || github.event.inputs.tag || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            icon: "examples/assets/gallery.ico"
          - os: macos-latest
            icon: "examples/assets/gallery.icns"

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v5

      - name: 📦 Set up Python & Install uv
        uses: astral-sh/setup-uv@v7

      - name: 📦 Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-build-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-build-

      - name: 📦 Install dependencies
        run: |
          uv sync
          uv pip install pyinstaller

      - name: 🔨 Build RinUI Gallery
        shell: bash
        run: |
          uv run pyinstaller --noconsole \
            --icon "${{ matrix.icon }}" \
            --add-data "RinUI:RinUI" \
            --add-data "examples/assets:assets" \
            --add-data "examples/components:components" \
            --add-data "examples/languages:languages" \
            --add-data "examples/pages:pages" \
            --add-data "examples/gallery.qml:." \
            --paths=. \
            --contents-directory . \
            --name=RinUIGallery \
            examples/gallery.py

      - name: 📦 Create archive
        shell: bash
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            curl -OLk# https://www.stahlworks.com/dev/zip.exe
            ./zip.exe -r -q "dist/RinUIGallery-Windows.zip" dist/RinUIGallery/*
          else
            cd dist && ditto -c -k --sequesterRsrc --keepParent RinUIGallery.app RinUIGallery-macOS.zip && cd ..
          fi
          ls -lh dist/

      - name: ☁️ Upload artifact
        uses: actions/upload-artifact@v5
        with:
          name: RinUIGallery-${{ runner.os }}
          path: dist/RinUIGallery-${{ runner.os }}.zip

  release:
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: ⬇️ Download artifacts
        uses: actions/download-artifact@v5
        with:
          path: dist/

      - name: 🧱 Set up git-cliff
        uses: kenji-miyake/setup-git-cliff@v2

      - name: 📜 Generate CHANGELOG
        id: changelog
        env:
          GITHUB_REPO: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME="${{ github.ref_name }}"
          if [ -z "$TAG_NAME" ]; then
            TAG_NAME="${{ github.event.inputs.tag }}"
          fi
          git cliff --latest --tag "$TAG_NAME" --config .git-cliff.toml --github-repo "${{ github.repository }}" --output changelog.md
          # cat changelog.md >> $GITHUB_STEP_SUMMARY >> $GITHUB_OUTPUT

      - name: 🚀 Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: RinUI Gallery ${{ github.ref_name || github.event.inputs.tag }}
          tag_name: ${{ github.ref_name || github.event.inputs.tag }}
          body_path: changelog.md
          files: dist/*/RinUIGallery-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
